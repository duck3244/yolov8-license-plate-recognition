# pyproject.toml
# Python 프로젝트 설정

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "yolov8-license-plate-recognition"
dynamic = ["version"]
description = "YOLOv8 기반 차량 번호판 인식 시스템"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "License Plate Recognition Team", email = "team@example.com"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
requires-python = ">=3.8"
dependencies = [
    "ultralytics>=8.0.0",
    "opencv-python>=4.5.0",
    "pytesseract>=0.3.8",
    "Pillow>=8.0.0",
    "numpy>=1.21.0",
    "torch>=1.9.0",
    "torchvision>=0.10.0",
    "flask>=2.0.0",
    "pandas>=1.3.0",
    "matplotlib>=3.3.0",
    "pyyaml>=6.0",
    "prometheus-client>=0.12.0",
    "psutil>=5.8.0",
    "requests>=2.25.0",
    "schedule>=1.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "black>=21.0.0",
    "flake8>=4.0.0",
    "sphinx>=4.0.0",
]
gpu = [
    "torch[cuda]>=1.9.0",
    "torchvision[cuda]>=0.10.0",
]

[project.scripts]
lpr-server = "main_app:main"

[tool.setuptools_scm]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88